<?xml version="1.0" encoding="ASCII"?>
<sb.base:Manager
    xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:sb.base="http://www.inf.ufg.br/mestrado/sb/base"
    xmlns:sb.base.common="http://www.inf.ufg.br/mestrado/sb/base/common"
    xsi:schemaLocation="http://www.inf.ufg.br/mestrado/sb/base http://www.inf.ufg.br/mestrado/sb/base/common"
    name="MHBLocal">
  <iface Name="IMHBLocal">
    <provides
        name="startCtrlr">
      <parameters
          name="id"/>
      <parameters
          name="ctrlrName"/>
      <parameters
          name="type"/>
      <parameters
          name="properties"/>
    </provides>
    <provides
        name="startDevice">
      <parameters
          name="id"/>
      <parameters
          name="devName"/>
      <parameters
          name="type"/>
      <parameters
          name="properties"/>
    </provides>
    <provides
        name="requestProperty">
      <parameters
          name="devId"/>
      <parameters
          name="attribute"/>
    </provides>
    <provides
        name="stopDevice">
      <parameters
          name="devId"/>
    </provides>
    <provides
        name="stopCtrlr"/>
    <provides
        name="setProperty">
      <parameters
          name="devId"/>
      <parameters
          name="attribute"/>
      <parameters
          name="value"/>
    </provides>
    <provides
        name="setCtrlrProperty">
      <parameters
          name="attribute"/>
      <parameters
          name="value"/>
    </provides>
    <provides
        name="open"/>
    <provides
        name="close"/>
    <provides
        name="closeDevice">
      <parameters
          name="devId"/>
    </provides>
    <provides
        name="openDevice">
      <parameters
          name="devId"/>
    </provides>
  </iface>
  <actions xsi:type="sb.base.common:MacroAction"
      name="startCtrlr"
      impl="broker.bottom.actions.StartCtrlr">
    <parameters
        name="id"/>
    <parameters
        name="ctrlrName"/>
    <parameters
        name="type"/>
    <parameters
        name="properties"/>
  </actions>
  <actions xsi:type="sb.base.common:MacroAction"
      name="startDevice"
      impl="broker.bottom.actions.StartDevice">
    <parameters
        name="id"/>
    <parameters
        name="devName"/>
    <parameters
        name="type"/>
    <parameters
        name="properties"/>
    <parameters
        name="lc"/>
    <parameters
        name="ctrlrId"/>
  </actions>
  <actions xsi:type="sb.base.common:MacroAction"
      name="requestProperty"
      impl="broker.bottom.actions.RequestProperty">
    <parameters
        name="devId"/>
    <parameters
        name="attribute"/>
    <parameters
        name="lc"/>
  </actions>
  <actions xsi:type="sb.base.common:MacroAction"
      name="stopDevice"
      impl="broker.bottom.actions.StopDevice">
    <parameters
        name="devId"/>
    <parameters
        name="ctrlrId"/>
  </actions>
  <actions xsi:type="sb.base.common:MacroAction"
      name="stopCtrlr"
      impl="broker.bottom.actions.StopCtrlr">
    <parameters
        name="ctrlrId"/>
  </actions>
  <actions xsi:type="sb.base.common:MacroAction"
      name="setProperty"
      impl="broker.bottom.actions.SetProperty">
    <parameters
        name="devId"/>
    <parameters
        name="attribute"/>
    <parameters
        name="lc"/>
    <parameters
        name="value"/>
  </actions>
  <actions xsi:type="sb.base.common:MacroAction"
      name="setCtrlrProperty"
      impl="broker.bottom.actions.SetCtrlrProperty">
    <parameters
        name="attribute"/>
    <parameters
        name="ctrlrId"/>
    <parameters
        name="value"/>
  </actions>
  <actions xsi:type="sb.base.common:MacroAction"
      name="updateDev"
      impl="broker.bottom.actions.UpdateDev">
    <parameters
        name="devId"/>
    <parameters
        name="current"/>
    <parameters
        name="voltage"/>
    <parameters
        name="power"/>
  </actions>
  <actions xsi:type="sb.base.common:MacroAction"
      name="open"
      impl="broker.bottom.actions.Open">
    <parameters
        name="ctrlrId"/>
  </actions>
  <actions xsi:type="sb.base.common:MacroAction"
      name="close"
      impl="broker.bottom.actions.Close">
    <parameters
        name="ctrlrId"/>
  </actions>
  <actions xsi:type="sb.base.common:MacroAction"
      name="closeDevice"
      impl="broker.bottom.actions.CloseDevice">
    <parameters
        name="ctrlrId"/>
    <parameters
        name="devId"/>
  </actions>
  <actions xsi:type="sb.base.common:MacroAction"
      name="openDevice"
      impl="broker.bottom.actions.OpenDevice">
    <parameters
        name="ctrlrId"/>
    <parameters
        name="devId"/>
  </actions>
  <handlers
      signal="//@iface/@provides.0">
    <action
        action="//@actions.0">
      <bindings
          parameter="//@actions.0/@parameters.0">
        <value
            xsi:type="sb.base.common:ParameterValue"
            parameter="//@actions.0/@parameters.0"/>
      </bindings>
      <bindings
          parameter="//@actions.0/@parameters.1">
        <value
            xsi:type="sb.base.common:ParameterValue"
            parameter="//@actions.0/@parameters.1"/>
      </bindings>
      <bindings
          parameter="//@iface/@provides.0/@parameters.2">
        <value
            xsi:type="sb.base.common:ParameterValue"
            parameter="//@iface/@provides.0/@parameters.2"/>
      </bindings>
      <bindings
          parameter="//@iface/@provides.0/@parameters.3">
        <value
            xsi:type="sb.base.common:ParameterValue"
            parameter="//@iface/@provides.0/@parameters.3"/>
      </bindings>
    </action>
  </handlers>
  <handlers
      signal="//@iface/@provides.2">
    <action
        action="//@actions.2">
      <bindings
          parameter="//@actions.2/@parameters.2">
        <value
            xsi:type="sb.base.common:ExpressionValue"
            value="bottom.keySet().first()"/>
      </bindings>
      <bindings
          parameter="//@iface/@provides.2/@parameters.0">
        <value
            xsi:type="sb.base.common:ParameterValue"
            parameter="//@iface/@provides.2/@parameters.0"/>
      </bindings>
      <bindings
          parameter="//@actions.2/@parameters.1">
        <value
            xsi:type="sb.base.common:ParameterValue"
            parameter="//@actions.2/@parameters.1"/>
      </bindings>
    </action>
  </handlers>
  <handlers
      signal="//@iface/@provides.1">
    <action
        action="//@actions.1">
      <bindings
          parameter="//@actions.1/@parameters.4">
        <value
            xsi:type="sb.base.common:ExpressionValue"
            value="bottom.keySet().first()"/>
      </bindings>
      <bindings
          parameter="//@iface/@provides.1/@parameters.0">
        <value
            xsi:type="sb.base.common:ParameterValue"
            parameter="//@iface/@provides.1/@parameters.0"/>
      </bindings>
      <bindings
          parameter="//@iface/@provides.1/@parameters.1">
        <value
            xsi:type="sb.base.common:ParameterValue"
            parameter="//@iface/@provides.1/@parameters.1"/>
      </bindings>
      <bindings
          parameter="//@iface/@provides.1/@parameters.2">
        <value
            xsi:type="sb.base.common:ParameterValue"
            parameter="//@iface/@provides.1/@parameters.2"/>
      </bindings>
      <bindings
          parameter="//@iface/@provides.1/@parameters.3">
        <value
            xsi:type="sb.base.common:ParameterValue"
            parameter="//@iface/@provides.1/@parameters.3"/>
      </bindings>
    </action>
  </handlers>
  <handlers
      signal="//@resourceManager/@iface/@signals.0"
      enabled="false">
    <action/>
  </handlers>
  <handlers
      signal="//@iface/@provides.3">
    <action
        action="//@actions.3">
      <bindings
          parameter="//@actions.3/@parameters.1">
        <value
            xsi:type="sb.base.common:ExpressionValue"
            value="bottom.keySet().first()"/>
      </bindings>
      <bindings
          parameter="//@resourceManager/@iface/@signals.0/@parameters.0">
        <value
            xsi:type="sb.base.common:ParameterValue"
            parameter="//@resourceManager/@iface/@signals.0/@parameters.0"/>
      </bindings>
    </action>
  </handlers>
  <handlers
      signal="//@iface/@provides.4">
    <action
        action="//@actions.4">
      <bindings
          parameter="//@actions.3/@parameters.1">
        <value
            xsi:type="sb.base.common:ExpressionValue"
            value="bottom.keySet().first()"/>
      </bindings>
    </action>
  </handlers>
  <handlers
      signal="//@iface/@provides.5">
    <action
        action="//@actions.5">
      <bindings
          parameter="//@actions.2/@parameters.2">
        <value
            xsi:type="sb.base.common:ExpressionValue"
            value="bottom.keySet().first()"/>
      </bindings>
      <bindings
          parameter="//@iface/@provides.2/@parameters.0">
        <value
            xsi:type="sb.base.common:ParameterValue"
            parameter="//@iface/@provides.2/@parameters.0"/>
      </bindings>
      <bindings
          parameter="//@actions.2/@parameters.1">
        <value
            xsi:type="sb.base.common:ParameterValue"
            parameter="//@actions.2/@parameters.1"/>
      </bindings>
      <bindings
          parameter="//@iface/@provides.5/@parameters.2">
        <value
            xsi:type="sb.base.common:ParameterValue"
            parameter="//@resourceManager/@iface/@signals.0/@parameters.3"/>
      </bindings>
    </action>
  </handlers>
  <handlers
      signal="//@iface/@provides.6">
    <action
        action="//@actions.6">
      <bindings
          parameter="//@actions.4/@parameters.0">
        <value
            xsi:type="sb.base.common:ExpressionValue"
            value="bottom.keySet().first()"/>
      </bindings>
      <bindings
          parameter="//@actions.2/@parameters.1">
        <value
            xsi:type="sb.base.common:ParameterValue"
            parameter="//@actions.2/@parameters.1"/>
      </bindings>
      <bindings
          parameter="//@iface/@provides.5/@parameters.2">
        <value
            xsi:type="sb.base.common:ParameterValue"
            parameter="//@resourceManager/@iface/@signals.0/@parameters.3"/>
      </bindings>
    </action>
  </handlers>
  <handlers
      signal="//@resourceManager/@iface/@signals.2">
    <action
        action="//@actions.7">
      <bindings
          parameter="//@actions.7/@parameters.0">
        <value
            xsi:type="sb.base.common:ParameterValue"
            parameter="//@resourceManager/@iface/@signals.0/@parameters.0"/>
      </bindings>
      <bindings
          parameter="//@actions.7/@parameters.1">
        <value
            xsi:type="sb.base.common:ParameterValue"
            parameter="//@actions.7/@parameters.1"/>
      </bindings>
      <bindings
          parameter="//@actions.7/@parameters.2">
        <value
            xsi:type="sb.base.common:ParameterValue"
            parameter="//@actions.7/@parameters.2"/>
      </bindings>
      <bindings
          parameter="//@actions.7/@parameters.3">
        <value
            xsi:type="sb.base.common:ParameterValue"
            parameter="//@actions.7/@parameters.3"/>
      </bindings>
      <bindings
          parameter="//@actions.4/@parameters.0">
        <value
            xsi:type="sb.base.common:ExpressionValue"
            value="bottom.keySet().first()"/>
      </bindings>
    </action>
  </handlers>
  <handlers
      signal="//@iface/@provides.7">
    <action
        action="//@actions.8">
      <bindings
          parameter="//@actions.4/@parameters.0">
        <value
            xsi:type="sb.base.common:ExpressionValue"
            value="bottom.keySet().first()"/>
      </bindings>
    </action>
  </handlers>
  <handlers
      signal="//@iface/@provides.8">
    <action
        action="//@actions.9">
      <bindings
          parameter="//@actions.4/@parameters.0">
        <value
            xsi:type="sb.base.common:ExpressionValue"
            value="bottom.keySet().first()"/>
      </bindings>
    </action>
  </handlers>
  <handlers
      signal="//@iface/@provides.10">
    <action
        action="//@actions.11">
      <bindings
          parameter="//@resourceManager/@iface/@signals.1/@parameters.0">
        <value
            xsi:type="sb.base.common:ParameterValue"
            parameter="//@resourceManager/@iface/@signals.1/@parameters.0"/>
      </bindings>
      <bindings
          parameter="//@actions.4/@parameters.0">
        <value
            xsi:type="sb.base.common:ExpressionValue"
            value="bottom.keySet().first()"/>
      </bindings>
    </action>
  </handlers>
  <handlers
      signal="//@iface/@provides.9">
    <action
        action="//@actions.10">
      <bindings
          parameter="//@resourceManager/@iface/@signals.1/@parameters.0">
        <value
            xsi:type="sb.base.common:ParameterValue"
            parameter="//@resourceManager/@iface/@signals.1/@parameters.0"/>
      </bindings>
      <bindings
          parameter="//@actions.4/@parameters.0">
        <value
            xsi:type="sb.base.common:ExpressionValue"
            value="bottom.keySet().first()"/>
      </bindings>
    </action>
  </handlers>
  <stateManager>
    <stateTypes
        name="bottom"
        key="//@stateManager/@stateTypes.0/@properties.0">
      <properties
          name="lc"/>
      <properties
          name="devs"/>
      <properties
          name="name"/>
      <properties
          name="type"/>
      <properties
          name="limitCurrent"/>
      <properties
          name="limitVoltage"/>
      <properties
          name="limitPower"/>
      <properties
          name="current"/>
      <properties
          name="voltage"/>
      <properties
          name="power"/>
      <properties
          name="open"/>
    </stateTypes>
  </stateManager>
  <resourceManager
      xsi:type="sb.base:InstanceResourceManager"
      Name="LocalController">
    <iface Name="IDevice">
      <signals
          name="devProperty">
        <parameters
            name="devId"/>
        <parameters
            name="lc"/>
        <parameters
            name="attribute"/>
        <parameters
            name="value"/>
      </signals>
      <signals
          name="devFailed">
        <parameters
            name="devId"/>
        <parameters
            name="ctrlrId"/>
      </signals>
      <signals
          name="updateDev">
        <parameters
            name="devId"/>
        <parameters
            name="current"/>
        <parameters
            name="voltage"/>
        <parameters
            name="power"/>
      </signals>
    </iface>
    <instances
        name="LoadDevice"
        impl="broker.bottom.adapters.LoadDeviceAdapter"
        iface="//@resourceManager/@iface">
      <features
          name="LOAD">
        <attributes
            name="devType"
            value="LOAD"/>
      </features>
    </instances>
    <instances
        name="SourceDevice"
        impl="broker.bottom.adapters.SourceDeviceAdapter"
        iface="//@resourceManager/@iface">
      <features
          name="SOURCE">
        <attributes
            name="devType"
            value="SOURCE"/>
      </features>
    </instances>
    <instances
        name="StorageDevice"
        impl="broker.bottom.adapters.StorageDeviceAdapter"
        iface="//@resourceManager/@iface">
      <features
          name="STORAGE">
        <attributes
            name="devType"
            value="STORAGE"/>
      </features>
    </instances>
    <instances
        name="SmartMeter"
        impl="broker.bottom.adapters.SmartMeterDeviceAdapter"
        iface="//@resourceManager/@iface">
      <features
          name="SMART_METER">
        <attributes
            name="devType"
            value="SMART_METER"/>
      </features>
    </instances>
    <instances
        name="LegacyMeter"
        impl="broker.bottom.adapters.LegacyMeterDeviceAdapter"
        iface="//@resourceManager/@iface">
      <features
          name="LEGACY_METER">
        <attributes
            name="devType"
            value="LEGACY_METER"/>
      </features>
    </instances>
  </resourceManager>
  <autonomicManager>
    <identifies
        name="DevFailed">
      <bindings
          bindable="//@resourceManager/@iface/@signals.1"
          name="event"/>
      <bindings
          bindable="//@stateManager/@stateTypes.0"
          name="state"/>
      <conditions
          expression="state.devs!=null &amp;&amp; state.devs.find{it.id==event.devId}.open==false"/>
    </identifies>
    <requests
        name="stopDevice"
        basedOn="//@autonomicManager/@identifies.0"/>
    <plans basedOn="//@autonomicManager/@requests.0"
        name="OpenDev">
      <action
          action="//@actions.8">
        <bindings
            parameter="//@resourceManager/@iface/@signals.1/@parameters.0">
          <value
              xsi:type="sb.base.common:ExpressionValue"
              value="state.devs!=null &amp;&amp; state.devs[event.params['devId']].open==false"/>
        </bindings>
        <bindings
            parameter="//@actions.6/@parameters.1">
          <value
              xsi:type="sb.base.common:ExpressionValue"
              value="state.lc"/>
        </bindings>
      </action>
    </plans>
  </autonomicManager>
  <policyManager>
    <points
        signal="//@iface/@provides.1">
      <request
          handler="//@policyManager/@handlers.0">
        <bindings
            parameter="//@iface/@provides.1/@parameters.2">
          <value
              xsi:type="sb.base.common:ParameterValue"
              parameter="//@policyManager/@handlers.0/@parameters.0"/>
        </bindings>
        <bindings
            parameter="//@actions.1/@parameters.4">
          <value
              xsi:type="sb.base.common:ParameterValue"
              parameter="//@actions.1/@parameters.4"/>
        </bindings>
        <bindings
            parameter="//@policyManager/@handlers.0/@parameters.1">
          <value
              xsi:type="sb.base.common:ExpressionValue"
              value="bottom[lc].type"/>
        </bindings>
        <bindings
            parameter="//@iface/@provides.1/@parameters.0">
          <value
              xsi:type="sb.base.common:ParameterValue"
              parameter="//@iface/@provides.1/@parameters.0"/>
        </bindings>
      </request>
    </points>
    <handlers
        handlerImpl="broker.bottom.policies.handler.SelectDevType">
      <parameters
          name="type"/>
      <parameters
          name="ctrlrType"/>
      <evaluation>
        <feature
            xsi:type="sb.base.common:ParameterValue"
            parameter="//@iface/@provides.1/@parameters.2"/>
        <contextBinding
            parameter="//@policyManager/@handlers.0/@evaluation/@context/@parameters.0">
          <value
              xsi:type="sb.base.common:ParameterValue"
              parameter="//@iface/@provides.1/@parameters.2"/>
        </contextBinding>
        <context>
          <parameters
              name="devType"/>
        </context>
      </evaluation>
    </handlers>
    <policies
        name="SelectLoadDev"
        businessValue="100"
        feature="LOAD">
      <decision
          parameter="devType"
          operation="equalTo"
          value="type"/>
    </policies>
    <policies
        name="SelectSourceDev"
        businessValue="100"
        feature="SOURCE">
      <decision
          parameter="devType"
          operation="equalTo"
          value="type"/>
    </policies>
    <policies
        name="SelectStorageDev"
        businessValue="100"
        feature="STORAGE">
      <decision
          parameter="devType"
          operation="equalTo"
          value="type"/>
    </policies>
    <policies
        name="SelectSmartMeterDev"
        businessValue="100"
        feature="SMART_METER">
      <decision
          parameter="devType"
          operation="equalTo"
          value="type"/>
    </policies>
    <policies
        name="SelectLegacyMeterDev"
        businessValue="100"
        feature="LEGACY_METER">
      <decision
          parameter="devType"
          operation="equalTo"
          value="type"/>
    </policies>
  </policyManager>
</sb.base:Manager>
